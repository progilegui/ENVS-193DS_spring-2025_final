---
title: "ENVS 193DS Spring 2025 Final"
author: "Jose Cardoso"
date: "06/06/2025"
format:
  html:
    toc: true # use this to display a table of contents
execute:
  message: false # use this to make sure messages don't show up
  warning: false # use this to make sure warnings don't show up
---

# Set up

```{r}
#| message: false

# insert code to read in packages here
library(tidyverse)
library(janitor)
library(here)
library(flextable)
library(ggeffects) # getting model predictions
library(MuMIn) # model selection

# insert code to read in your data here
sst <- read_csv("/Users/admin/Documents/github/ENVS-193DS_spring-2025_final/data/SST_update2023.csv")

nest_boxes <- read_csv("/Users/admin/Documents/github/ENVS-193DS_spring-2025_final/data/occdist.csv")
```

# Problem 1

## a. Transparent statistical methods

In part 1, the co-worker used the Pearson's r correlation test. In part 2, the co-worker used an Analysis of Variance (ANOVA) test to 

## b. More information needed

A Tukey’s HSD post-hoc test should be included to identify which specific nitrogen sources differ significantly in mean nitrogen load, since the ANOVA test only tells us that at least one group is different. It would also help to include descriptive statistics like the mean and standard deviation for each source type to give a clearer picture of how nitrogen loads vary across groups and how large those differences actually are.

## c. Suggestions for rewriting

Nitrogen load appeared to increase with distance from the headwater, suggesting downstream accumulation of nitrogen inputs. (Pearson's r = correlation coefficient, distribution = [not reported], test statistic = [not reported], p = 0.03, significance level = [not reported]).

Nitrogen loads varied among different source types, which may indicate that some sources, like fertilizer or wastewater, contribute more nitrogen than others. (One-way ANOVA, F([not reported]) = [not reported], p = 0.02, significance level = [not reported]).

# Problem 2

## a. Cleaning and summarizing
```{r}
# cleaning and summarizing data
sst_clean <- sst |> #creating clean data frame
  clean_names() |> # capital to lowercase and spaces to underscores
  mutate(year = year(date), # creating new year and month columns
         month1 = month(date),
         month = month(month1, label = TRUE, abbr = TRUE)) |> 
  select(year, month, temp) |>  # selecting only the date and temp columns
  mutate(month = as_factor(month),
         month = fct_relevel(
           month, 
           "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",            "Nov", "Dec")
         ) |> 
  mutate(year = as_factor(year),
         year = fct_relevel(
           year, "2018", "2019", "2020", "2021", "2022", "2023"
         )) |> 
  group_by(year,month) |> # group data by year and month
  summarize(mean_monthly_sst = mean(temp, na.rm = TRUE)) |> # calculate surface water temp mean of each month
  ungroup() |> 
  filter(year %in% c("2018", "2019", "2020", "2021", "2022", "2023"))

slice_sample(sst_clean, n = 5)

str(sst_clean)
```

# b. Visualize the data
```{r}
ggplot(data = sst_clean, # use sst_clean data frame
       aes(x = month, # month on the x-axis
           y = mean_monthly_sst, # monthly mean surface temp on the y-axis
           group = year, # group by year
           color = year))+ # color by year
  geom_point()+ #adding points
  geom_line()+ #adding lines
  scale_color_brewer()+ # color gradient in a single color
  theme_bw()+ # changing to black and white theme
  labs(x = "Month", # relabeling x-axis
       y = "Mean monthly sea surface temperature (°C)", # relabeling y-axis
       color = "Year")+ # relabeling legend title
  theme(panel.grid.major = element_blank(),# remove gridlines
        panel.grid.minor = element_blank(),
        legend.position = "inside", # place the legend inside the plot 
        legend.position.inside = c(0.15,0.7)) # place the legend to the left
```


# Problem 3

## a. Response variable

The 1s and 0s in this data set correspond to whether a nest box is or is not occupied. This was done for each species.

## b. Purpose of study

Swift Parrots are the target species for restoration efforts, while Tree Martins and Common Starlings are nontarget species that readily exploit the restoration efforts.

## c. Difference in "seasons"

The two years are years where a mast tree flowering event occurred, and the seasons are breeding events induced by the mast tree flowering event. The difference in the two years is in 2019, where the second proposed restoration method was tested-permanent nesting boxes.

## d. Table of models

```{r}
models <- data.frame(
  Model = c("0", "1", "2", "3"), #labeling model number
  Season = c(" ", "X", " ","X"), #indicating if season is included or not in model
  Note = c(" ", "X", "X", " "), #indicating if distance from forest edge is included or not in model
  description = c("Null model", "Saturated model", "Distance from forest edge", "Season"), # model description
  stringsAsFactors = FALSE
)

# Create the flextable
table_models <- flextable(models) 
# Changing header labels
table_models <- labelizor(
  x = table_models,
  part = "header",
  labels = c("Model" = "Model", "Season" = "Season", "Note" = "Distance from forest edge", "description" = " Model description")
)
set_table_properties(table_models, width = 1, layout = "autofit")

```


## e. Run the models

```{r}
# clean data frame
nest_boxes_clean <- nest_boxes |> 
  clean_names() |> 
  select(edge_distance, season, sp)


model0 <- lm(
  sp ~ 1, # formula
  data = nest_boxes_clean # data frame
)

model1 <- lm(
  sp ~ edge_distance + season, # formula
  data = nest_boxes_clean # data frame
)
  
model2 <- lm(
  sp ~ edge_distance, # formula
  data = nest_boxes_clean # data frame
)

model3 <- lm(
  sp ~ season, # formula
  data = nest_boxes_clean # data frame
)
```


## f. Check the diagnostics

```{r}
# model 1: all predictors
par(mfrow = c(2,2))
plot(model1)
```

```{r}
# model 2: distance to forest edge
par(mfrow = c(2,2))
plot(model2)
```

```{r}
# model 3: season
par(mfrow = c(2,2))
plot(model3)
```

## g. Select the best model

```{r}
AICc(model1, # best model: saturated
     model2,
     model3,
     model0) |> 
  # arranging output in descending order of AIC
  arrange(AICc)
```

The best model that predicts Swift Parrot next box occupancy, as determined by Akaike’s Information Criterion (AIC), includes the distance from forest edge and the season.

## h. Visualize the model predictions

```{r}
ggpredict(model1,
          terms = c("edge_distance",
                    "season")) |> 
  plot(show_data = TRUE)+
  theme_classic()+
  labs(x = "Distance from forest edge (m)",
       y = "Nest box occupancy")
```


## i. Write a caption for your figure

**Figure 1. Swift Parrot nest box occupancy decreases as the distance from the forest edge increases.** Stojanovic, Dejan et al. (2021). Do nest boxes breed the target species or its competitors? A case study of a critically endangered bird [Dataset]. Dryad. https://doi.org/10.5061/dryad.83bk3j9sb

## j. Calculate model predictions

```{r}
sp_prob <- ggpredict(
  model1, #selecting model 1
  terms = "edge_distance[0,900], #choosing 0 and 900 m
  season"
)

print(sp_prob)
```


## k. Interpret your results

The figure in part h shows that predicted Swift Parrot nest box occupancy is higher at the forest edge (0 m) and decreases as distance from the edge increases, with this pattern existing in both seasons. The probability of occupancy is higher in 2016 than in 2019 at 0 m, and by 900 m, probabilities drop in both seasons, with 2019 showing lower predicted occupancy. The biology explaining the trends found are that Swift Parrot nest box occupancy likely drops farther from the forest edge because they prefer edge habitats where boxes are easier to find and there's less initial competition from the nontarget species. The permanent nesting boxes near the edge can end up being used more by the Common Starlings and Tree Martins, leaving fewer for the Swift Parrots.

# Problem 4

## a. Comparing visualizations

* My homework 2 visualizations only had half of my data points, had the default themes, default colors, and were two separate plots (box w/jitter and connected scatter) did not show the relationship between my predictor variables, presence of the sun and time since engine was last shutoff, and my response variable, time until engine switch to EV mode, as clearly. My homework 3 visualization was one connected scatter plot that included time since engine was last shutoff and time until engine switch to EV mode as the x and y axis, respectively, with the presence of the sun as a color gradient fill under the curve of the plotted data points.

* The similarities seen between all visualizations are that all y-axes, time until EV switch, are the same. 

* The patterns I see in each visualization are that there is a positive correlation between time since engine was last shutoff and time of day with time until engine switch to EV mode. The connected scatter plots share the same pattern, while the boxplot w/jitter had the inverse relationship due to presence of the sun acting as the x-axis. 

* The feedback I received in week 9 included positive feedback regarding the choice of color, theme, and clarity of data representation. I was advised to change the background color of the plot from homework 3 to neutral color so that there was not a high contrast between the red background and blue gradient, which I implemented by changing the background color to gray.

